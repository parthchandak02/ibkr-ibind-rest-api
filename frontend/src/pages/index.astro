---
// Modern Astro page using component-based architecture
import BaseLayout from '../layouts/BaseLayout.astro';
import TradingHeader from '../components/TradingHeader.astro';
import SecurityNotice from '../components/SecurityNotice.astro';
import GitHubActionsSection from '../components/GitHubActionsSection.astro';
import StatusSection from '../components/StatusSection.astro';
---

<BaseLayout title="Trading Terminal - Secure Execution">
  <script is:inline>
    window.PUBLIC_API_BASE = import.meta.env.PUBLIC_API_BASE || '/api';
  </script>
  <div class="trading-container">
    <TradingHeader />
    <StatusSection />
    <SecurityNotice />
    <GitHubActionsSection />
    
    <!-- Trading Information Card -->
    <div class="trading-info-card">
      <div class="info-header">
        <div class="info-icon">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
          </svg>
        </div>
        <h3 class="info-title">Test Trade Configuration</h3>
      </div>
      
      <div class="trade-params">
        <div class="param-grid">
          <div class="param-item">
            <span class="param-label">Symbol</span>
            <span class="param-value symbol">AAPL</span>
          </div>
          <div class="param-item">
            <span class="param-label">Action</span>
            <span class="param-value action">BUY</span>
          </div>
          <div class="param-item">
            <span class="param-label">Quantity</span>
            <span class="param-value">1 share</span>
          </div>
          <div class="param-item">
            <span class="param-label">Limit Price</span>
            <span class="param-value price">$20.00</span>
          </div>
          <div class="param-item">
            <span class="param-label">Order Type</span>
            <span class="param-value">Limit</span>
          </div>
          <div class="param-item">
            <span class="param-label">Time in Force</span>
            <span class="param-value">DAY</span>
          </div>
        </div>
        
        <div class="trade-note">
          <div class="note-icon">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"/>
              <path d="M12 16v-4M12 8h.01"/>
            </svg>
          </div>
          <p class="note-text">
            This is a test order with a very low limit price ($20.00) that will likely not execute.
            It's designed for testing the trading workflow safely.
          </p>
        </div>
      </div>
    </div>
  </div>
  
  <script src="../scripts/trading-utils.js"></script>
</BaseLayout>

<style>
  .trading-container {
				width: 100%;
    max-width: 800px;
    margin: 0 auto;
    padding: var(--spacing-lg);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xl);
			}
			
  .trading-info-card {
    background: hsl(var(--card));
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    box-shadow: var(--shadow-sm);
    overflow: hidden;
			}
			
  .info-header {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    padding: var(--spacing-lg);
    border-bottom: 1px solid hsl(var(--border));
    background: hsl(var(--muted) / 0.3);
			}
			
  .info-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    background: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
    border-radius: var(--radius);
			}
			
  .info-title {
    font-family: var(--font-heading);
    font-size: var(--text-lg);
    font-weight: 600;
    color: hsl(var(--foreground));
    margin: 0;
    letter-spacing: -0.025em;
			}
			
  .trade-params {
    padding: var(--spacing-lg);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
			}
			
  .param-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--spacing-lg);
			}
			
  .param-item {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
    padding: var(--spacing-md);
    background: hsl(var(--muted) / 0.3);
    border-radius: var(--radius);
    border: 1px solid hsl(var(--border));
  }
  
  .param-label {
    font-size: var(--text-xs);
				font-weight: 600;
    color: hsl(var(--muted-foreground));
				text-transform: uppercase;
    letter-spacing: 0.05em;
			}
			
  .param-value {
    font-size: var(--text-sm);
    font-weight: 600;
    font-family: var(--font-mono);
    color: hsl(var(--foreground));
			}
			
  .param-value.symbol {
    color: hsl(var(--primary));
			}
			
  .param-value.action {
    color: hsl(var(--chart-green));
  }
  
  .param-value.price {
    color: hsl(var(--warning));
			}
			
  .trade-note {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md);
    padding: var(--spacing-md);
    background: hsl(var(--muted) / 0.5);
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
    border-left: 4px solid hsl(var(--warning));
			}
			
  .note-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    color: hsl(var(--warning));
    flex-shrink: 0;
  }
  
  .note-text {
    font-size: var(--text-xs);
    color: hsl(var(--muted-foreground));
    margin: 0;
    line-height: 1.4;
			}
			
  @media (max-width: 768px) {
    .trading-container {
      padding: var(--spacing-md);
      gap: var(--spacing-lg);
			}
			
    .param-grid {
      grid-template-columns: 1fr;
      gap: var(--spacing-md);
			}
			
    .info-header {
      padding: var(--spacing-md);
			}
			
    .trade-params {
      padding: var(--spacing-md);
    }
    
    .trade-note {
      flex-direction: column;
      text-align: center;
    }
  }
  
  @media (max-width: 480px) {
    .trading-container {
      max-width: 100%;
    }
    
    .param-grid {
      grid-template-columns: 1fr;
    }
			}
		</style>
